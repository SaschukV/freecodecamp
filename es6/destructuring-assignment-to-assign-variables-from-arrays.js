// ❓DESCRIPTION:
// ES6 делает деструктуризацию массивов такой же простой, как и деструктуризацию объектов.

// Одно из ключевых отличий между оператором расширения и деструктуризацией массива заключается в том,
//  что оператор расширения распаковывает все содержимое массива в список, разделенный запятыми.
//   Следовательно, вы не можете выбирать, какие элементы вы хотите назначить переменным.

// Деструктуризация массива позволяет нам сделать именно это:

// const [a, b] = [1, 2, 3, 4, 5, 6];
// console.log(a, b);

// Консоль отобразит значения a и b как 1, 2.

// Переменной a присваивается первое значение массива, а b — второе значение массива.
//  Мы также можем получить доступ к значению по любому индексу массива с помощью деструктуризации,
//   используя запятые для достижения желаемого индекса.:

// const [a, b,,, c] = [1, 2, 3, 4, 5, 6];
// console.log(a, b, c);

// Консоль отобразит значения a, b и c как 1, 2, 5.

// Используйте присваивание деструктуризации, чтобы поменять местами значения a и b так,
// чтобы a получало значение, хранящееся в b, а b получало значение, хранящееся в a

// ✅ Solution1:(моё решение)

let a = 8,
  b = 6
;[a, b] = [b, a]
const arr = [a, b]
console.log(arr) // [6,8]
